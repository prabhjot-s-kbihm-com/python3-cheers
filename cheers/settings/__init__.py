"""
Django settings for cheers project.

Generated by 'django-admin startproject' using Django 1.11.20.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import string

from cheers.apps.base.utility.io import confirm_dir_exists
from split_settings.tools import include
from django.utils.translation import ugettext_lazy as _

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

FILES_DIR = os.path.join(BASE_DIR, 'files')
confirm_dir_exists(FILES_DIR)

TEMPLATES_DIR = os.path.join(FILES_DIR, 'templates')
confirm_dir_exists(TEMPLATES_DIR)

STATIC_DIR = os.path.join(FILES_DIR, 'static')
confirm_dir_exists(STATIC_DIR)

STATIC_ROOT = os.path.join(FILES_DIR, 'assets')
confirm_dir_exists(STATIC_ROOT)

MEDIA_ROOT = os.path.join(FILES_DIR, 'media')
confirm_dir_exists(MEDIA_ROOT)

FIXTURES_ROOT = os.path.join(FILES_DIR, 'fixtures')
confirm_dir_exists(FIXTURES_ROOT)

FIXTURE_DIRS = [FIXTURES_ROOT, ]

STATICFILES_DIRS = [STATIC_DIR, ]

LOG_FILE_DIR = os.path.join(FILES_DIR, 'logs')
confirm_dir_exists(LOG_FILE_DIR)

# dir for temporary files
TEMP_DIR = os.path.join(FILES_DIR, 'temp')
confirm_dir_exists(TEMP_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(z26vw*0kn73u^f35cf7hd^b%6o5bj!4_&a%k7&@u+e297!q^&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',

    # apps
    'cheers.apps.base',
    'cheers.apps.account',
    'cheers.apps.bar',
    'cheers.apps.site',
    'cheers.apps.promotions',
    'cheers.apps.country',

    # 3rd party apps
    'phonenumber_field',
    'rest_framework',
    'oauth2_provider',
    'rest_framework.authtoken',
    'social_django',
    'rest_framework_social_oauth2',

]

AUTH_USER_MODEL = 'account.ModelAccountUser'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'cheers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cheers.wsgi.application'
APPEND_SLASH = False

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        'ENGINE':'django.contrib.gis.db.backends.postgis',
        'NAME': 'cheers',
        'USER': 'postgres',
        'PASSWORD': 'silver@123',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    },
}

AUTHENTICATION_BACKENDS = (

    # Facebook OAuth2
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

DEFAULT_OAUTH_APP_NAME = "cheers"
# Facebook configuration
SOCIAL_AUTH_FACEBOOK_KEY = '772545836506199'
SOCIAL_AUTH_FACEBOOK_SECRET = '782171230aee5018d67ba18334089eb7'

# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook. Email is not sent by default, to get it, you must request the email permission:
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'
}

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope',
               'write': 'Write scope',
               'groups': 'Access to your groups'},

    'ACCESS_TOKEN_EXPIRE_SECONDS': 86400,  # one year
    'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'EXCEPTION_HANDLER': 'cheers.apps.base.utility.exception.custom_exception_handler',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# -------------------------------------------------------------------------------
# EMAIL SETTINGS
# -------------------------------------------------------------------------------
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'cheersworldcontact@gmail.com'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = 'Asic4225nqm!'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

BASE_URL = ""
LOGIN_URL = '/login/'
STRIPE_SECRET_KEY = "sk_test_o5CuF2fujfJtKT37gA0ojGyi" #Test Key (Created User Id:- gaurav.tyagi@techstriker.com)


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
USE_I18N = True
LOCALE_PATHS = [os.path.join(FILES_DIR, "locale")]
LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('fr', _('French')),
    ('en-us', _('English')),
]

USE_L10N = True
TIME_ZONE = 'UTC'
USE_TZ = True


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# COUPONS
COUPON_TYPES = (
    ('monetary', 'Money based coupon'),
    ('percentage', 'Percentage discount'),
    ('subscription', 'Subscription coupon'),
)
COUPONS_CODE_LENGTH = 15
COUPONS_CODE_CHARS = string.ascii_letters+string.digits
COUPONS_SEGMENTED_CODES = False
COUPONS_SEGMENT_LENGTH = 4
COUPONS_SEGMENT_SEPARATOR = "-"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'cheers': {
            'handlers': ['console', 'mail_admins'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

# -------------------------------------------------------------------------------
# CHOOSE ENVIRONMENT AND INCLUDE SETTINGS
# -------------------------------------------------------------------------------

ENVIRONMENT = os.environ.get('CHEERS_ENVIRONMENT', 'development')
include(
    '%s.py' % ENVIRONMENT,
    scope=globals()
)
